/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ihealthnew;

import java.awt.AWTException;
import java.awt.Image;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tanka
 */
public class PatientInterface extends javax.swing.JFrame {
    private Patient P;
    private String OpenTime,CloseTime;
    private String canceltime;
    private String canceldate;
    /**
     * Creates new form PatientInterface
     */
    public PatientInterface(Patient P) {
        initComponents();
        this.P=P;
         try{
            Scanner in = new Scanner(new FileInputStream("OCTime.txt"));
            OpenTime = in.next();
            CloseTime = in.next();  
            in.close();
        }
        catch(FileNotFoundException e){
            System.out.println(e.getMessage());
        }
          
            jLabel5.setText(OpenTime);
            jLabel7.setText(CloseTime);
            jPanel3.setVisible(false);
            jPanel2.setVisible(true);
            jTextField1.setText("XXXX");
            jTextField2.setText("DD/MM/YYYY");
            jButton3.setEnabled(false);
            jLabel11.setText("Hi " + P.getFullName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuPanel = new javax.swing.JPanel();
        Icon = new javax.swing.JLabel();
        Ihealth = new javax.swing.JLabel();
        AdminButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AdminButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IHealth Patient");
        setResizable(false);

        MenuPanel.setBackground(new java.awt.Color(255, 255, 255));

        Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ihealthnew/icon/output-onlinepngtools.png"))); // NOI18N

        Ihealth.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        Ihealth.setForeground(new java.awt.Color(255, 0, 0));
        Ihealth.setText("IHealth");

        AdminButton.setBackground(new java.awt.Color(204, 204, 204));
        AdminButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AdminButton.setText("Make Appointment");
        AdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("PATIENT");
        jLabel1.setAlignmentX(0.5F);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ihealthnew/icon/output-onlinepngtools (1).png"))); // NOI18N

        AdminButton1.setBackground(new java.awt.Color(204, 204, 204));
        AdminButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AdminButton1.setText("Check Appointment");
        AdminButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminButton1ActionPerformed(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ihealthnew/icon/output-onlinepngtools (5).png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdminButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(AdminButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addComponent(Icon)
                        .addGap(31, 31, 31)
                        .addComponent(Ihealth, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MenuPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)))))
                .addGap(23, 23, 23))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Ihealth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AdminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(AdminButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        jPanel2.setBackground(new java.awt.Color(102, 153, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel3.setText("Make Appointment");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Open from :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("1100");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setText("-");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("1200");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel8.setText("Appointment Time :");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("XXXX");
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel9.setText("Appointment Date :");

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(204, 204, 204));
        jTextField2.setText("DD/MM/YY");
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });

        jButton1.setText("Make Appointment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(104, 104, 104))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(17, 17, 17)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(28, 28, 28)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                .addGap(87, 87, 87)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );

        jPanel3.setBackground(new java.awt.Color(102, 153, 255));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel10.setText("Check Appointment");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "No", "Date", "Time"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ihealthnew/icon/output-onlinepngtools (4).png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Cancel Appointment");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel10)
                .addContainerGap(126, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminButtonActionPerformed
        // TODO add your handling code here:
            jPanel3.setVisible(false);
            jPanel2.setVisible(true);
            jTextField1.setText("XXXX");
            jTextField2.setText("DD/MM/YYYY");
                    jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField2.setForeground(new java.awt.Color(204, 204, 204));
    }//GEN-LAST:event_AdminButtonActionPerformed

    private void AdminButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminButton1ActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        jPanel2.setVisible(false);
        UpdateAppointment();
        jButton3.setEnabled(false);
    }//GEN-LAST:event_AdminButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String date = jTextField2.getText();
        String time = jTextField1.getText();
        try{
            Scanner in = new Scanner(new FileInputStream("PatientAppointment.txt"));
            while(in.hasNextLine()){
                String a = in.nextLine();
                String b = in.next();
                in.nextLine();
                if(a.equals(P.getFullName())&&b.equals(date)){
                    JOptionPane.showMessageDialog(this, "You cannot do appointment twice in one day");
                    return;
                }
            }
        }catch(FileNotFoundException e){
            
        }
        if (CheckValidDate(date)){
            if (CheckDatePass(date)){
            if (CheckValidTime(time)){
                if (CheckOpen(time)){
                    if (CheckAvailable(date, time)){
                        try{
                            Notification N = new Notification(P.getFullName(),date,time);
                        PrintWriter out = new PrintWriter(new FileOutputStream("PatientAppointment.txt",true));
                    out.println(P.getFullName());
                    out.println(date +" "+time);
                    out.close();
                     }catch (IOException e) {
   System.out.println("Problem with file output"); 
}
                    jPanel3.setVisible(true);
                    jPanel2.setVisible(false);
                    UpdateAppointment();
                    }
                    else{
                        String OfferTime=OfferTime(date,time);
                        if (!OfferTime.equals("")){
                                ///////////////////////////////////////////////////////Askkkkkkkkkkkkkkkkkkk User To Choose))))))))))))))))))
                                String[]Options={"Yes","No"};
                                int x = JOptionPane.showOptionDialog(null, "The Offer Time is " + OfferTime,
                        "Do you want to accept the Offer Time ?",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, Options, Options[0]);
                                if (x==0){
                                    Notification N = new Notification(P.getFullName(),date,OfferTime);
                                    try{
                        PrintWriter out = new PrintWriter(new FileOutputStream("PatientAppointment.txt",true));
                    out.println(P.getFullName());
                    out.println(date +" "+OfferTime);
                    out.close();
                     }catch (IOException e) {
   System.out.println("Problem with file output"); 
}
                    
                    jPanel3.setVisible(true);
                    jPanel2.setVisible(false);
                    UpdateAppointment(); }

                           
                    

                        
                    }
                        else{
                        JOptionPane.showMessageDialog(this, "No More Time Available today");
                                    jTextField1.setText("XXXX");
                                    jTextField2.setText("DD/MM/YYYY");}
                    }

                }
                else{
                  JOptionPane.showMessageDialog(this, "Time not in Opening Time"); 
                            jTextField1.setText("XXXX");
                            jTextField2.setText("DD/MM/YYYY");}
            }
            else{
             JOptionPane.showMessageDialog(this, "Invalid Time"); 
                        jTextField1.setText("XXXX");
                        jTextField2.setText("DD/MM/YYYY");}
        }
            else{
           JOptionPane.showMessageDialog(this, "The Day Past");
                       jTextField1.setText("XXXX");
                       jTextField2.setText("DD/MM/YYYY"); }
        }
        else{
        JOptionPane.showMessageDialog(this, "Invalid Date");
                    jTextField1.setText("XXXX");
                    jTextField2.setText("DD/MM/YYYY");
        }
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField2.setForeground(new java.awt.Color(204, 204, 204));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        jPanel2.setVisible(false);
        UpdateAppointment();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        LoginPage login = new LoginPage();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
            try{
            DefaultTableModel t = (DefaultTableModel)jTable1.getModel();
            String name = P.getFullName();
            String date = t.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String time = t.getValueAt(jTable1.getSelectedRow(), 2).toString();
            Scanner in = new Scanner(new FileInputStream("PatientAppointment.txt"));
            int line = 0;
            while(in.hasNextLine()){
                in.nextLine();
                in.nextLine();
                line++;
            }
            in.close();
            Scanner in1 = new Scanner(new FileInputStream("PatientAppointment.txt"));
            String []a = new String[line];
            String []b = new String[line];
            String []c = new String[line];
            int i =0;
            while(in1.hasNextLine()){
                a[i]=in1.nextLine();
                b[i]=in1.next();
                c[i]=in1.next();
                in1.nextLine();
                i++;
            }
            in1.close();
            PrintWriter out = new PrintWriter(new FileOutputStream("PatientAppointment.txt"));
            for(int j =0;j<a.length;j++){
                if(b[j].equals(date)&&c[j].equals(time)){
                    
                }
                else{
                    out.println(name);
                    out.println(b[j]+" "+c[j]);
                }
            }
            out.close();
            JOptionPane.showMessageDialog(this, "Appointment cancelled successful!");
            UpdateAppointment();
        }catch(FileNotFoundException e){
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
                DefaultTableModel t = (DefaultTableModel)jTable1.getModel();
        String no = t.getValueAt(jTable1.getSelectedRow(), 0).toString();
        String date = t.getValueAt(jTable1.getSelectedRow(), 1).toString();
        String time = t.getValueAt(jTable1.getSelectedRow(), 2).toString();
       
        jButton3.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
                    jTextField1.setText("");
                    jTextField1.setForeground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        // TODO add your handling code here:
                    jTextField2.setText("");
                    jTextField2.setForeground(new java.awt.Color(0,0,0));
    }//GEN-LAST:event_jTextField2MouseClicked
    
    public boolean CheckDatePass(String date){
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HHmm");  
            LocalDateTime now = LocalDateTime.now();
        String DD = dtf.format(now).substring(0,2);
        String MM = dtf.format(now).substring(3,5);
        String YYYY = dtf.format(now).substring(6,10);
        if (Integer.parseInt(date.substring(6, 10)) > Integer.parseInt(YYYY) 
            || (Integer.parseInt(date.substring(6, 10))==Integer.parseInt(YYYY) &&Integer.parseInt(date.substring(3, 5)) > Integer.parseInt(MM))
            || (Integer.parseInt(date.substring(6, 10))==Integer.parseInt(YYYY) &&Integer.parseInt(date.substring(3, 5)) == Integer.parseInt(MM)) && Integer.parseInt(date.substring(0, 2)) >= Integer.parseInt(DD))
            return true;
            else
            return false;
    }
    public boolean CheckValidDate(String date){
        if (Character.isDigit(date.charAt(0)) && Character.isDigit(date.charAt(1))
                && Character.isDigit(date.charAt(3)) && Character.isDigit(date.charAt(4))
                &&Character.isDigit(date.charAt(6)) && Character.isDigit(date.charAt(7))
                && (date.charAt(2)=='/') && (date.charAt(5)=='/')
                && date.length()==10 && (Integer.parseInt(date.substring(0, 2))<=31)
                &&(Integer.parseInt(date.substring(3, 5))<=12))
            return true;
            else
            return false;
    }
    public boolean CheckValidTime(String time){
        if(time.length()==4 && Character.isDigit(time.charAt(0))&& Character.isDigit(time.charAt(1))
                &&Character.isDigit(time.charAt(2)) && Character.isDigit(time.charAt(3))
                &&(Integer.parseInt(time.substring(0, 2)))<=23 && (Integer.parseInt(time.substring(2)))<=59
                || time.equals("2400"))
            return true;
        else
        return false;        
    }
            public boolean CheckOpen(String Time){
                String inputhour = Time.substring(0, 2);
                String inputmin = Time.substring(2);
                String Openhour =OpenTime.substring(0, 2);
                String Openmin =OpenTime.substring(2);
                String Closehour =CloseTime.substring(0, 2);
                String Closemin =CloseTime.substring(2);
                
            if (((Integer.parseInt(inputhour))>(Integer.parseInt(Openhour)) && (Integer.parseInt(inputhour))<(Integer.parseInt(Closehour)))
                    ||(inputhour.equals(Openhour)&&(Integer.parseInt(inputmin))>=(Integer.parseInt(Openmin)))
                    ||(inputhour.equals(Closehour)&&(Integer.parseInt(inputmin))<=(Integer.parseInt(Closemin))))
                return true;
            else
                return false;
            }
            public boolean CheckAvailable(String Date, String Time){
             String inputhour = Time.substring(0, 2);
             int count =0;
        try{
            Scanner in = new Scanner(new FileInputStream("PatientAppointment.txt"));
            while(in.hasNext()){
                in.next();
                if(Date.equals(in.next())){
                    if(inputhour.equals(in.next().substring(0,2))){
                        count++;}
                    
                }
                
                in.nextLine();
            }
            in.close();
        }
        catch(FileNotFoundException e){
            System.out.println(e.getMessage());
        }
             if(count<10)
                    return true;
                else
                    return false;
            }
            public String OfferTime(String Date , String time){
                String inputhour = time.substring(0, 2);
                String OfferHour;
                String OfferTime="1";
                int inputhour1= Integer.parseInt(inputhour);
                int swap =1;
                for (int i = 0; i < 24; i++) {
                    inputhour1=inputhour1-(i*swap);
                    if(Integer.toString(inputhour1).length()==1)
                    OfferHour="0"+Integer.toString(inputhour1);
                    else{
                    OfferHour= Integer.toString(inputhour1);
                    OfferTime= OfferHour+"00";}
                    swap*=-1;
                    if (CheckValidTime(OfferTime) && CheckOpen(OfferTime)
                            &&CheckAvailable(Date,OfferTime)){
                        return OfferTime;
                    }
                }
            return "";
            }
            public void UpdateAppointment(){
            DefaultTableModel T = (DefaultTableModel)jTable1.getModel();
        T.setRowCount(0);
        int count=0;
        try{
            Scanner in = new Scanner(new FileInputStream("PatientAppointment.txt"));
            while(in.hasNextLine()){
                count++;
                String name = in.nextLine();
                String date = in.next();
                String time = in.next();
                in.nextLine();
                if(P.getFullName().equals(name)){
                    String[]info = {Integer.toString(count),date,time};
                    T.addRow(info);
                }       
            }
            in.close();
        }
        catch(FileNotFoundException e){
            System.out.println(e.getMessage());
        }
            }

 
 
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdminButton;
    private javax.swing.JButton AdminButton1;
    private javax.swing.JLabel Icon;
    private javax.swing.JLabel Ihealth;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
